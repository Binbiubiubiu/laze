const unicorn = require('eslint-plugin-unicorn');
const unusedImports = require('eslint-plugin-unused-imports');
const prettier = require('eslint-config-prettier');
const globals = require('globals');

const importConf = require('./conf/import');
const standard = require('./conf/standard');
const yml = require('./conf/yml');
const jsonc = require('./conf/jsonc');
const pkg = require('./conf/pkg');
const markdown = require('./conf/markdown');

const ignores = {
  ignores: [
    '**/logs/**/*',
    // Diagnostic reports (https://nodejs.org/api/report.html)
    '**/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json',
    '**/*.lock',
    // Directory for instrumented libs generated by jscoverage/JSCover
    '**/lib-cov/**/*',
    // Coverage directory used by tools like istanbul
    '**/coverage/**/*',
    '**/*.lcov',
    '**/bower_components/**/*',
    // Compiled binary addons (https://nodejs.org/api/addons.html)
    '**/build/Release/**/*',
    // Dependency directories
    '**/jspm_packages/**/*',
    // Snowpack dependency directory (https://snowpack.dev/)
    '**/web_modules/**/*',
    // Next.js build output
    '**/out/**/*',
    // Nuxt.js build / generate output
    '**/dist/**/*',
    // Comment in the public line in if your project uses Gatsby and not Next.js
    // https://nextjs.org/blog/next-9-1#public-directory-support
    '**/public/**/*',
    '**/*.min.*',
    '**/*.d.ts',
    '**/CHANGELOG.md',
    '**/LICENSE*',
    '**/temp/**/*',
    '**/package-lock.json',
    '**/pnpm-lock.yaml',
    '**/__snapshots__/**/*',
    '**/_site/**/*',
  ],
};

const baseConfig = {
  languageOptions: {
    globals: {
      ...globals.browser,
      ...globals.node,
      ...globals.es2021,
    },
  },
  plugins: {
    unicorn,
    'unused-imports': unusedImports,
  },
  rules: {
    // import
    'import/order': 'error',
    'import/namespace': 'off',
    'import/no-absolute-path': 'off',
    'import/no-unresolved': 'off',
    'import/no-named-as-default-member': 'off',
    'import/no-named-as-default': 'off',
    'import/no-mutable-exports': 'error',
    'import/newline-after-import': ['error', { count: 1, considerComments: true }],

    // Common
    'no-param-reassign': 'off',
    camelcase: 'off',
    'no-constant-condition': 'warn',
    'no-debugger': 'error',
    'no-console': 'off',
    'no-cond-assign': ['error', 'always'],
    'no-restricted-syntax': ['error', 'DebuggerStatement', 'LabeledStatement', 'WithStatement'],
    'no-return-await': 'off',
    'no-var': 'error',
    'prefer-const': [
      'error',
      {
        destructuring: 'all',
        ignoreReadBeforeAssign: true,
      },
    ],
    'prefer-arrow-callback': [
      'error',
      {
        allowNamedFunctions: false,
        allowUnboundThis: true,
      },
    ],
    'object-shorthand': [
      'error',
      'always',
      {
        avoidQuotes: true,
        ignoreConstructors: false,
      },
    ],
    'prefer-exponentiation-operator': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'spaced-comment': [
      'error',
      'always',
      {
        line: {
          markers: ['/'],
          exceptions: ['/', '#'],
        },
        block: {
          markers: ['!'],
          exceptions: ['*'],
          balanced: true,
        },
      },
    ],

    // best
    'array-callback-return': 'error',
    'block-scoped-var': 'error',
    'consistent-return': 'off',
    complexity: 'off',
    eqeqeq: ['error', 'smart'],
    'no-case-declarations': 'error',
    'no-multi-str': 'error',
    'no-with': 'error',
    'no-void': 'error',
    'no-useless-escape': 'off',
    'vars-on-top': 'error',
    'require-await': 'off',
    'no-return-assign': 'off',
    'max-statements-per-line': ['error', { max: 1 }],
    'no-use-before-define': [
      'error',
      {
        functions: false,
        classes: false,
        variables: true,
        allowNamedExports: true,
      },
    ],
    'sort-imports': [
      'error',
      {
        ignoreCase: false,
        ignoreDeclarationSort: true,
        ignoreMemberSort: false,
        memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
        allowSeparatedGroups: false,
      },
    ],

    // node
    'n/no-callback-literal': 'off',

    // unused-imports
    'unused-imports/no-unused-imports': 'error',
    'unused-imports/no-unused-vars': [
      'warn',
      {
        vars: 'all',
        varsIgnorePattern: '^_',
        args: 'after-used',
        argsIgnorePattern: '^_',
      },
    ],

    // unicorns
    'unicorn/error-message': 'error',
    'unicorn/escape-case': 'error',
    'unicorn/new-for-builtins': 'error',
    'unicorn/no-instanceof-array': 'error',
    'unicorn/no-await-expression-member': 'error',
    'unicorn/no-unnecessary-await': 'error',
    'unicorn/no-unreadable-array-destructuring': 'error',
    'unicorn/no-unreadable-iife': 'error',
    'unicorn/number-literal-case': 'error',
  },
};

module.exports = [].concat(
  ignores,
  // extends
  standard,
  importConf.recommended,
  prettier,
  // custom
  baseConfig,
  jsonc,
  yml,
  {
    files: ['**/*.{js,cjs,mjs,jsx}'],
    rules: {
      '@typescript-eslint/no-var-requires': 'off',
      '@typescript-eslint/no-require-imports': 'off',
    },
  },
  pkg,
  {
    files: ['**/*.d.ts'],
    rules: {
      'import/no-duplicates': 'off',
    },
  },
  markdown
);
